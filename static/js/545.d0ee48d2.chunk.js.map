{"version":3,"file":"static/js/545.d0ee48d2.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/FilmDetails/FilmDetails.styled.js","components/FilmDetails/FilmDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const Wrap = styled.nav`\n  display: flex;\n  \n  align-items: center;\n  padding: 1rem 0;\n  border: 1px solid red`;\n\n  export const Tittle = styled.h3`\n  padding-top: 10px;\n  margin-bottom: 20px;`;\n\n  export const Item = styled.li`\n  list-style-type: none;\n `;\n  export const Warning = styled.p`\n  color: red;\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 15px;\n  `","import { useState, useEffect } from 'react';\nimport { useParams} from 'react-router-dom';\nimport { getInfoAboutActors } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Wrap } from './Cast.styled';\nimport { Tittle, Item, Warning } from './Cast.styled';\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (movieId === null) return;\n    getInfoAboutActors(movieId)\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(error => error.message).finally(setIsLoading(false));\n  }, [movieId]);\n\n  \n\n  return (\n    <div className=\"cast\">\n         {isLoading && <Loader />}\n      {cast !== null && (\n        <>\n          {' '}\n          <Tittle>Actors are: </Tittle>\n          {cast.length > 0 ?   <Wrap>\n            {cast.slice(0, 10).map(actor => (\n              <Item key={actor.id}>\n                <img\n                  width=\"300\"\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                />\n                <p>{actor.name}</p>\n              </Item>\n            ))}\n          </Wrap>  : <Warning>Sorry my friend, we can't give you any information!!!</Warning>}\n        \n        </>\n      )}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 10px`;\n\nexport const Tittle = styled.h3`\n  font-size: 28px;\n  padding: 20px;`;\n\n  export const Warning = styled.p`\n  color: red;\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 15px;\n  `","import { useState, useEffect } from \"react\";\nimport { useParams, } from \"react-router-dom\";\nimport { getRequersReview } from \"services/api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Container, Tittle, Warning } from \"./Reviews.styled\"; \nexport const Reviews = () =>{\n    const {movieId} = useParams();\n    const [review, setReview] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => {\n        setIsLoading(true);\n        if(movieId === null) return;\n        getRequersReview (movieId)\n        .then((data)=>{setReview(data.results)})\n        .catch(error => error.message)\n        .finally(setIsLoading(false));\n    }, [movieId]);\n    \n\n\n    return (\n        <div>\n           \n             {isLoading && <Loader />}\n            <Tittle>Reviews are: </Tittle>\n            {review.length <= 0 && <Warning>Sorry, there is no reviews!</Warning>}\n            {review && review.map( item => (\n                <Container key={item.name}>\n                <h3>{item.author}</h3>\n                <p>{item.content}</p>\n                   \n                </Container>\n            ))}\n        </div>\n    )\n\n}","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nexport const Wrapper = styled.div`\ndisplay: flex;\ngap: 30px;\nmargin-bottom: 30px`;\n\nexport const Section = styled.section`\npadding-top: 30px;\npadding-bottom: 60px;\npadding-left: 15px;\nmargin-bottom: 30px;\n`;\n\nexport const Title = styled.h2`\nfont-size: 18px;\nfont-weight: 700;\nmargin-bottom: 20px;\ncolor: grey`\n\nexport const ButtonLink = styled(NavLink)`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 100px;\nheight: 40px;\nbackground-color: black;\ncolor: white;\nmargin-bottom: 20px;`\n\nexport const ImageWrap = styled.div`\nobject-fit: contain;\nbox-shadow: 10px 5px 5px black;`","import { useState, useEffect } from \"react\";\n\nimport { getFilmInformation } from \"services/api\";\nimport { useParams, useLocation, Routes, Route } from \"react-router-dom\";\nimport { Cast } from \"components/Cast/Cast\";\nimport { Reviews } from \"components/Reviews/Reviews\";\nimport  {StyledNavLin } from '../App.styled';\nimport { Wrapper, Section, ButtonLink, ImageWrap, Title } from \"./FilmDetails.styled\";\n\n const Film = () =>{\nconst [film, setFilm] = useState(null);\nconst { movieId} = useParams();\nconst location = useLocation();\n\nconst goBackLink = location?.state?.from ?? '/';\n\nuseEffect(() => {\n    getFilmInformation(movieId)\n  .then(setFilm)\n  .catch(err => err.message);\n}, [movieId]);\n\n\n\n\n    return (\n        <Section>\n            <ButtonLink to={goBackLink}>Go back</ButtonLink>\n          {film &&  <Wrapper>\n            <ImageWrap>\n            <img  width=\"600\" src={`https://image.tmdb.org/t/p/w500${film.poster_path\n}`} alt=\"film.title\" />\n            </ImageWrap>\n            <div>\n            <h1>{film.title} ({(film.release_date.slice(0, 4))})</h1>\n           \n            <p> <b>User score:</b>  {Math.round(film.popularity)}%</p>\n            <p> <b> Overview: </b> {film.overview}</p>\n            <p> <b>Genres: </b> {film.genres.map(item => item.name).join(', ')}</p>\n            </div>\n            </Wrapper>}\n\n            <Title>Additional Information</Title>\n            <StyledNavLin state={{from: goBackLink}} to=\"cast\">Cast</StyledNavLin>\n            <StyledNavLin state={{from: goBackLink}} to=\"reviews\">Reviews</StyledNavLin>\n\n        \n\n             <Routes>\n            <Route path=\"cast\" element={<Cast/>}/>\n            <Route path=\"reviews\" element={<Reviews/>}/>\n            </Routes>\n            \n\n           \n        </Section>\n    )\n}\n\nexport default Film;","import axios from 'axios';\n\n\n\n\naxios.defaults.baseURL  = 'https://api.themoviedb.org/3';\n//   static API_KEY = '1deae1a36202e3ac8c29219a3d453e0f';\n  \n  axios.defaults.params = {\n    api_key: 'fc9c8a8d778f1915a9b2d9762106d266',\n    page: 1,\n\n\n}\nexport const  getPopularFilms = async () => {\n    const {data}= await axios.get(\n      `trending/all/day`);\n    \n    return data;\n}\n\nexport const getFilmsByQuery = async (query) => {\n    const {data} = await axios.get(`/search/movie`, {\n        params: {query : query,}\n    });\n\n   \n    return data;\n}\n\nexport const getFilmInformation = async (movieId) =>{\n    const {data} = await axios.get(`/movie/${movieId}`);\n\n \n    return data;\n}\n\nexport const getInfoAboutActors = async (movieId) =>{\n    const {data} = await axios.get(`/movie/${movieId}/credits`,{\n        params : {per_page: 20, page: 1}\n    });\n\n   \n    return data;\n}\n\nexport const getRequersReview = async (movieId) =>{\n    const {data} = await axios.get(`/movie/${movieId}/reviews`);\n\n    \n    return data;\n}\n\n\n\n\n\n// import axios from 'axios';\n\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n\n// export const getPopularFilms = async (page = 1) => {\n//     const data  = await axios.get('/trending/get-trending',{\n//         params :{\n//             api_key : 'fc9c8a8d778f1915a9b2d9762106d266',\n           \n//         }\n//     })\n    \n//     return data;\n// };"],"names":["Wrap","styled","Tittle","Item","Warning","Cast","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","getInfoAboutActors","then","data","catch","error","message","finally","className","Loader","length","slice","map","actor","width","src","profile_path","alt","name","id","Container","Reviews","review","setReview","getRequersReview","results","item","author","content","Wrapper","Section","Title","ButtonLink","NavLink","ImageWrap","film","setFilm","location","useLocation","goBackLink","state","from","getFilmInformation","err","to","poster_path","title","release_date","Math","round","popularity","overview","genres","join","path","element","axios","api_key","page","getPopularFilms","getFilmsByQuery","query","params","per_page"],"sourceRoot":""}